{"ast":null,"code":"import _toConsumableArray from \"/home/halil/Desktop/react-reminder-calendar/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/halil/Desktop/react-reminder-calendar/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport * as uuid from 'uuid/v4';\nimport { subMonths, addMonths } from 'date-fns';\nimport { CALENDAR_MOVE_BACK, CALENDAR_MOVE_FORWARD, CALENDAR_SELECT_TODAY, CALENDAR_ADD_ITEM, CALENDAR_EDIT_ITEM, CALENDAR_SAVE_ITEM, CALENDAR_DELETE_ITEM, CALENDAR_CANCEL_EDIT } from './actions';\n/**\n * Immutability helpers\n */\n\nfunction editItem(items, editedItem) {\n  return items.map(function (item) {\n    if (item.id === editedItem.id) {\n      return _objectSpread({}, item, editedItem);\n    }\n\n    return item;\n  });\n}\n\nfunction addItem(items, newItem) {\n  return [].concat(_toConsumableArray(items), [_objectSpread({}, newItem, {\n    id: uuid()\n  })]);\n}\n\nfunction deleteItem(items, id) {\n  return items.filter(function (item) {\n    return item.id !== id;\n  });\n}\n/**\n * Date helpers\n */\n\n\nfunction previousMonth(date) {\n  return subMonths(date, 1);\n}\n\nfunction nextMonth(date) {\n  return addMonths(date, 1);\n}\n\nexport var initialState = {\n  currentDate: new Date(),\n  reminders: [],\n  selectedItem: null\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CALENDAR_MOVE_FORWARD:\n      return _objectSpread({}, state, {\n        currentDate: nextMonth(state.currentDate)\n      });\n\n    case CALENDAR_MOVE_BACK:\n      return _objectSpread({}, state, {\n        currentDate: previousMonth(state.currentDate)\n      });\n\n    case CALENDAR_SELECT_TODAY:\n      return _objectSpread({}, state, {\n        currentDate: new Date()\n      });\n\n    case CALENDAR_ADD_ITEM:\n      return _objectSpread({}, state, {\n        selectedItem: {\n          id: null,\n          title: '',\n          startDate: new Date()\n        }\n      });\n\n    case CALENDAR_EDIT_ITEM:\n      return _objectSpread({}, state, {\n        selectedItem: state.reminders.find(function (item) {\n          return item.id === action.payload;\n        })\n      });\n\n    case CALENDAR_DELETE_ITEM:\n      return _objectSpread({}, state, {\n        selectedItem: null,\n        reminders: deleteItem(state.reminders, action.payload)\n      });\n\n    case CALENDAR_SAVE_ITEM:\n      {\n        var updatedReminders = null;\n\n        if (action.payload.id) {\n          updatedReminders = editItem(state.reminders, action.payload);\n        } else {\n          updatedReminders = addItem(state.reminders, action.payload);\n        }\n\n        return _objectSpread({}, state, {\n          selectedItem: null,\n          reminders: updatedReminders\n        });\n      }\n\n    case CALENDAR_CANCEL_EDIT:\n      return _objectSpread({}, state, {\n        selectedItem: null\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/halil/Desktop/react-reminder-calendar/src/pages/reminders-calendar/state/reducer.js"],"names":["uuid","subMonths","addMonths","CALENDAR_MOVE_BACK","CALENDAR_MOVE_FORWARD","CALENDAR_SELECT_TODAY","CALENDAR_ADD_ITEM","CALENDAR_EDIT_ITEM","CALENDAR_SAVE_ITEM","CALENDAR_DELETE_ITEM","CALENDAR_CANCEL_EDIT","editItem","items","editedItem","map","item","id","addItem","newItem","deleteItem","filter","previousMonth","date","nextMonth","initialState","currentDate","Date","reminders","selectedItem","state","action","type","title","startDate","find","payload","updatedReminders"],"mappings":"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","sourcesContent":["import * as uuid from 'uuid/v4';\nimport { subMonths, addMonths } from 'date-fns';\nimport {\n  CALENDAR_MOVE_BACK,\n  CALENDAR_MOVE_FORWARD,\n  CALENDAR_SELECT_TODAY,\n  CALENDAR_ADD_ITEM,\n  CALENDAR_EDIT_ITEM,\n  CALENDAR_SAVE_ITEM,\n  CALENDAR_DELETE_ITEM,\n  CALENDAR_CANCEL_EDIT\n} from './actions';\n\n/**\n * Immutability helpers\n */\n\nfunction editItem(items, editedItem) {\n  return items.map((item) => {\n    if (item.id === editedItem.id) {\n      return { ...item, ...editedItem };\n    }\n    return item;\n  });\n}\n\nfunction addItem(items, newItem) {\n  return [...items, { ...newItem, id: uuid() }];\n}\n\nfunction deleteItem(items, id) {\n  return items.filter(item => item.id !== id);\n}\n\n/**\n * Date helpers\n */\n\nfunction previousMonth(date) {\n  return subMonths(date, 1);\n}\n\nfunction nextMonth(date) {\n  return addMonths(date, 1);\n}\n\nexport const initialState = {\n  currentDate: new Date(),\n  reminders: [],\n  selectedItem: null\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case CALENDAR_MOVE_FORWARD:\n      return { ...state, currentDate: nextMonth(state.currentDate) };\n    case CALENDAR_MOVE_BACK:\n      return { ...state, currentDate: previousMonth(state.currentDate) };\n    case CALENDAR_SELECT_TODAY:\n      return { ...state, currentDate: new Date() };\n    case CALENDAR_ADD_ITEM:\n      return {\n        ...state,\n        selectedItem: { id: null, title: '', startDate: new Date() }\n      };\n    case CALENDAR_EDIT_ITEM:\n      return {\n        ...state,\n        selectedItem: state.reminders.find(item => item.id === action.payload)\n      };\n    case CALENDAR_DELETE_ITEM:\n      return {\n        ...state,\n        selectedItem: null,\n        reminders: deleteItem(state.reminders, action.payload)\n      };\n    case CALENDAR_SAVE_ITEM: {\n      let updatedReminders = null;\n      if (action.payload.id) {\n        updatedReminders = editItem(state.reminders, action.payload);\n      } else {\n        updatedReminders = addItem(state.reminders, action.payload);\n      }\n\n      return {\n        ...state,\n        selectedItem: null,\n        reminders: updatedReminders\n      };\n    }\n    case CALENDAR_CANCEL_EDIT:\n      return { ...state, selectedItem: null };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}