{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { compareAsc } from 'date-fns';\nimport reducer, { initialState } from './reducer';\nexport { reducer };\n/**\n * Selectors\n */\n\nexport var selectRemindersCalendar = function selectRemindersCalendar(state) {\n  return state.remindersCalendar || initialState;\n};\nexport var getRemindersByDate = createSelector(selectRemindersCalendar, function (state) {\n  return state.reminders.slice().sort(function (a, b) {\n    return compareAsc(a.startDate, b.startDate);\n  }).reduce(function (map, item) {\n    var key = \"\".concat(item.startDate.getFullYear(), \"_\").concat(item.startDate.getMonth(), \"_\").concat(item.startDate.getDate());\n\n    if (!map[key]) {\n      map[key] = [];\n    }\n\n    map[key].push(item);\n    return map;\n  }, {});\n});\nexport var getCurrentDate = createSelector(selectRemindersCalendar, function (state) {\n  return state.currentDate;\n});\nexport var getSelectedItem = createSelector(selectRemindersCalendar, function (state) {\n  return state.selectedItem;\n});","map":{"version":3,"sources":["/home/halil/Desktop/react_reminder/src/pages/reminders-calendar/state/index.js"],"names":["createSelector","compareAsc","reducer","initialState","selectRemindersCalendar","state","remindersCalendar","getRemindersByDate","reminders","slice","sort","a","b","startDate","reduce","map","item","key","getFullYear","getMonth","getDate","push","getCurrentDate","currentDate","getSelectedItem","selectedItem"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,SAASC,UAAT,QAA2B,UAA3B;AACA,OAAOC,OAAP,IAAkBC,YAAlB,QAAsC,WAAtC;AAEA,SAASD,OAAT;AAEA;;;;AAIA,OAAO,IAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,iBAAN,IAA2BH,YAA/B;AAAA,CAArC;AAEP,OAAO,IAAMI,kBAAkB,GAAGP,cAAc,CAC9CI,uBAD8C,EAE9C,UAAAC,KAAK;AAAA,SACHA,KAAK,CAACG,SAAN,CAAgBC,KAAhB,GAAwBC,IAAxB,CACE,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUX,UAAU,CAACU,CAAC,CAACE,SAAH,EAAcD,CAAC,CAACC,SAAhB,CAApB;AAAA,GADF,EAEEC,MAFF,CAES,UAACC,GAAD,EAAMC,IAAN,EAAe;AACtB,QAAMC,GAAG,aAAMD,IAAI,CAACH,SAAL,CAAeK,WAAf,EAAN,cAAsCF,IAAI,CAACH,SAAL,CAAeM,QAAf,EAAtC,cAAmEH,IAAI,CAACH,SAAL,CAAeO,OAAf,EAAnE,CAAT;;AACA,QAAI,CAACL,GAAG,CAACE,GAAD,CAAR,EAAe;AACbF,MAAAA,GAAG,CAACE,GAAD,CAAH,GAAW,EAAX;AACD;;AACDF,IAAAA,GAAG,CAACE,GAAD,CAAH,CAASI,IAAT,CAAcL,IAAd;AAEA,WAAOD,GAAP;AACD,GAVD,EAUG,EAVH,CADG;AAAA,CAFyC,CAAzC;AAiBP,OAAO,IAAMO,cAAc,GAAGtB,cAAc,CAC1CI,uBAD0C,EAE1C,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACkB,WAAV;AAAA,CAFqC,CAArC;AAKP,OAAO,IAAMC,eAAe,GAAGxB,cAAc,CAC3CI,uBAD2C,EAE3C,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACoB,YAAV;AAAA,CAFsC,CAAtC","sourcesContent":["import { createSelector } from 'reselect';\nimport { compareAsc } from 'date-fns';\nimport reducer, { initialState } from './reducer';\n\nexport { reducer };\n\n/**\n * Selectors\n */\n\nexport const selectRemindersCalendar = state => state.remindersCalendar || initialState;\n\nexport const getRemindersByDate = createSelector(\n  selectRemindersCalendar,\n  state => (\n    state.reminders.slice().sort(\n      (a, b) => compareAsc(a.startDate, b.startDate)\n    ).reduce((map, item) => {\n      const key = `${item.startDate.getFullYear()}_${item.startDate.getMonth()}_${item.startDate.getDate()}`;\n      if (!map[key]) {\n        map[key] = [];\n      }\n      map[key].push(item);\n\n      return map;\n    }, {})\n  )\n);\n\nexport const getCurrentDate = createSelector(\n  selectRemindersCalendar,\n  state => state.currentDate\n);\n\nexport const getSelectedItem = createSelector(\n  selectRemindersCalendar,\n  state => state.selectedItem\n);\n"]},"metadata":{},"sourceType":"module"}