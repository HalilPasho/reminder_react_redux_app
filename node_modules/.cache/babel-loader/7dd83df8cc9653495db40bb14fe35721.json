{"ast":null,"code":"import _objectSpread from \"/home/halil/Desktop/react-reminder-calendar/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport rootReducer from './state/reducer'; // Define here the reducers that will always be present in the application\n\nvar staticReducers = {\n  root: rootReducer\n};\n\nfunction createReducer(asyncReducers) {\n  return combineReducers(_objectSpread({}, staticReducers, asyncReducers));\n} // Configure the store\n\n\nexport default function configureStore(initialState) {\n  var store = createStore(createReducer(), initialState, devToolsEnhancer()); // Add a dictionary to keep track of the registered async reducers\n\n  store.asyncReducers = {}; // Create an inject reducer function\n  // This function adds the async reducer, and creates a new combined reducer\n\n  store.injectReducer = function (key, asyncReducer) {\n    store.asyncReducers[key] = asyncReducer;\n    store.replaceReducer(createReducer(store.asyncReducers));\n  }; // Return the modified store\n\n\n  return store;\n}","map":{"version":3,"sources":["/home/halil/Desktop/react-reminder-calendar/src/configureStore.js"],"names":["createStore","combineReducers","devToolsEnhancer","rootReducer","staticReducers","root","createReducer","asyncReducers","configureStore","initialState","store","injectReducer","key","asyncReducer","replaceReducer"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,gBAAT,QAAiC,0BAAjC;AACA,OAAOC,WAAP,MAAwB,iBAAxB,C,CAEA;;AACA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,IAAI,EAAEF;AADe,CAAvB;;AAIA,SAASG,aAAT,CAAuBC,aAAvB,EAAsC;AACpC,SAAON,eAAe,mBACjBG,cADiB,EAEjBG,aAFiB,EAAtB;AAID,C,CAED;;;AACA,eAAe,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,MAAMC,KAAK,GAAGV,WAAW,CAACM,aAAa,EAAd,EAAkBG,YAAlB,EAAgCP,gBAAgB,EAAhD,CAAzB,CADmD,CAGnD;;AACAQ,EAAAA,KAAK,CAACH,aAAN,GAAsB,EAAtB,CAJmD,CAMnD;AACA;;AACAG,EAAAA,KAAK,CAACC,aAAN,GAAsB,UAACC,GAAD,EAAMC,YAAN,EAAuB;AAC3CH,IAAAA,KAAK,CAACH,aAAN,CAAoBK,GAApB,IAA2BC,YAA3B;AACAH,IAAAA,KAAK,CAACI,cAAN,CAAqBR,aAAa,CAACI,KAAK,CAACH,aAAP,CAAlC;AACD,GAHD,CARmD,CAanD;;;AACA,SAAOG,KAAP;AACD","sourcesContent":["import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport rootReducer from './state/reducer';\n\n// Define here the reducers that will always be present in the application\nconst staticReducers = {\n  root: rootReducer\n};\n\nfunction createReducer(asyncReducers) {\n  return combineReducers({\n    ...staticReducers,\n    ...asyncReducers\n  });\n}\n\n// Configure the store\nexport default function configureStore(initialState) {\n  const store = createStore(createReducer(), initialState, devToolsEnhancer());\n\n  // Add a dictionary to keep track of the registered async reducers\n  store.asyncReducers = {};\n\n  // Create an inject reducer function\n  // This function adds the async reducer, and creates a new combined reducer\n  store.injectReducer = (key, asyncReducer) => {\n    store.asyncReducers[key] = asyncReducer;\n    store.replaceReducer(createReducer(store.asyncReducers));\n  };\n\n  // Return the modified store\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}