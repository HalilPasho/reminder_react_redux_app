{"ast":null,"code":"import _defineProperty from \"/home/halil/Desktop/react_reminder/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/halil/Desktop/react_reminder/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/halil/Desktop/react_reminder/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/halil/Desktop/react_reminder/src/pages/reminders-calendar/components/reminder.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DatePicker from 'react-datepicker';\nimport { CirclePicker } from 'react-color';\n\nvar Reminder = function Reminder(_ref) {\n  var item = _ref.item,\n      onSave = _ref.onSave,\n      onDelete = _ref.onDelete,\n      onCancelEdit = _ref.onCancelEdit;\n\n  // Init reminder model with default values\n  var _useState = useState(_objectSpread({\n    color: '#f44336'\n  }, item)),\n      _useState2 = _slicedToArray(_useState, 2),\n      fields = _useState2[0],\n      setFields = _useState2[1];\n\n  function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setFields(_objectSpread({}, fields, _defineProperty({}, name, value)));\n  }\n\n  function handleDateChange(date) {\n    setFields(_objectSpread({}, fields, {\n      startDate: date\n    }));\n  }\n\n  function handleColorChange(color) {\n    setFields(_objectSpread({}, fields, {\n      color: color.hex\n    }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSave(fields);\n  }\n\n  function handleDelete() {\n    onDelete(item.id);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"reminder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Create/edit reminder\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Title\",\n    type: \"text\",\n    className: \"input-title\",\n    autoComplete: \"off\",\n    maxLength: \"30\",\n    value: fields.title,\n    name: \"title\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(DatePicker, {\n    selected: fields.startDate,\n    onChange: handleDateChange,\n    showTimeSelect: true,\n    timeFormat: \"HH:mm\",\n    timeIntervals: 30,\n    dateFormat: \"MMMM d, yyyy h:mm aa\",\n    timeCaption: \"time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(CirclePicker, {\n    color: fields.color,\n    onChangeComplete: handleColorChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"form-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, fields.id && React.createElement(\"button\", {\n    type: \"button\",\n    className: \"delete\",\n    onClick: handleDelete,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Delete\"), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onCancelEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"primary\",\n    value: \"Save\",\n    disabled: !fields.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }))));\n};\n\nReminder.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    startDate: PropTypes.instanceOf(Date).isRequired\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  onCancelEdit: PropTypes.func.isRequired\n};\nexport default Reminder;","map":{"version":3,"sources":["/home/halil/Desktop/react_reminder/src/pages/reminders-calendar/components/reminder.js"],"names":["React","useState","PropTypes","DatePicker","CirclePicker","Reminder","item","onSave","onDelete","onCancelEdit","color","fields","setFields","handleChange","e","target","name","value","handleDateChange","date","startDate","handleColorChange","hex","handleSubmit","preventDefault","handleDelete","id","title","propTypes","shape","string","isRequired","instanceOf","Date","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport DatePicker from 'react-datepicker';\nimport { CirclePicker } from 'react-color';\n\nconst Reminder = ({\n  item, onSave, onDelete, onCancelEdit\n}) => {\n  // Init reminder model with default values\n  const [fields, setFields] = useState({ color: '#f44336', ...item });\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setFields({ ...fields, [name]: value });\n  }\n\n  function handleDateChange(date) {\n    setFields({ ...fields, startDate: date });\n  }\n\n  function handleColorChange(color) {\n    setFields({ ...fields, color: color.hex });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSave(fields);\n  }\n\n  function handleDelete() {\n    onDelete(item.id);\n  }\n\n  return (\n    <div className=\"reminder\">\n      <h3>Create/edit reminder</h3>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-row\">\n          <div className=\"form-column\">\n            <input\n              placeholder=\"Title\"\n              type=\"text\"\n              className=\"input-title\"\n              autoComplete=\"off\"\n              maxLength=\"30\"\n              value={fields.title}\n              name=\"title\"\n              onChange={handleChange}\n            />\n            <DatePicker\n              selected={fields.startDate}\n              onChange={handleDateChange}\n              showTimeSelect\n              timeFormat=\"HH:mm\"\n              timeIntervals={30}\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n              timeCaption=\"time\"\n            />\n          </div>\n          <div className=\"form-column\">\n            <CirclePicker\n              color={fields.color}\n              onChangeComplete={handleColorChange}\n            />\n          </div>\n        </div>\n        <div className=\"form-buttons\">\n          {fields.id && <button type=\"button\" className=\"delete\" onClick={handleDelete}>Delete</button>}\n          <button type=\"button\" onClick={onCancelEdit}>Cancel</button>\n          <input type=\"submit\" className=\"primary\" value=\"Save\" disabled={!fields.title} />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nReminder.propTypes = {\n  item: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    startDate: PropTypes.instanceOf(Date).isRequired\n  }).isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  onCancelEdit: PropTypes.func.isRequired\n};\n\nexport default Reminder;\n"]},"metadata":{},"sourceType":"module"}