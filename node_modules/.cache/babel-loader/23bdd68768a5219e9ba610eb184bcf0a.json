{"ast":null,"code":"import _objectWithoutProperties from \"/home/halil/Desktop/react_reminder/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/halil/Desktop/react_reminder/src/pages/reminders-calendar/index.js\";\nimport React, { memo } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport useInjectReducer from '../../hooks/useInjectReducer';\nimport Calendar from '../../components/calendar/calendar';\nimport CaledarReminder from '../../components/calendar/calendar.reminder';\nimport Modal from '../../components/modal';\nimport Reminder from './components/reminder';\nimport { reducer, getCurrentDate, getRemindersByDate, getSelectedItem } from './state';\nimport { moveBacward, moveForward, addItem, editItem, saveItem, deleteItem, cancelEdit, selectToday } from './state/actions';\nvar key = 'remindersCalendar';\n\nvar RemindersCalendar = function RemindersCalendar(props) {\n  useInjectReducer({\n    key: key,\n    reducer: reducer\n  });\n\n  var selectedItem = props.selectedItem,\n      onCancelEdit = props.onCancelEdit,\n      onSave = props.onSave,\n      onDelete = props.onDelete,\n      remindersByDate = props.remindersByDate,\n      calendarProps = _objectWithoutProperties(props, [\"selectedItem\", \"onCancelEdit\", \"onSave\", \"onDelete\", \"remindersByDate\"]);\n\n  var reminderModal = null;\n\n  if (selectedItem) {\n    reminderModal = React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Reminder, {\n      item: selectedItem,\n      onCancelEdit: onCancelEdit,\n      onSave: onSave,\n      onDelete: onDelete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }));\n  }\n\n  function renderReminders(dayId) {\n    if (!remindersByDate[dayId]) {\n      return null;\n    }\n\n    return remindersByDate[dayId].map(function (reminder) {\n      return React.createElement(CaledarReminder, Object.assign({}, reminder, {\n        onEdit: props.onEdit,\n        key: reminder.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    });\n  }\n\n  return React.createElement(React.Fragment, null, reminderModal, React.createElement(Calendar, Object.assign({}, calendarProps, {\n    dayRender: renderReminders,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    date: getCurrentDate(state),\n    remindersByDate: getRemindersByDate(state),\n    selectedItem: getSelectedItem(state)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onPrevious: function onPrevious() {\n      return dispatch(moveBacward());\n    },\n    onNext: function onNext() {\n      return dispatch(moveForward());\n    },\n    onToday: function onToday() {\n      return dispatch(selectToday());\n    },\n    onAddNew: function onAddNew() {\n      return dispatch(addItem());\n    },\n    onEdit: function onEdit(id) {\n      return dispatch(editItem(id));\n    },\n    onSave: function onSave(item) {\n      return dispatch(saveItem(item));\n    },\n    onDelete: function onDelete(id) {\n      return dispatch(deleteItem(id));\n    },\n    onCancelEdit: function onCancelEdit() {\n      return dispatch(cancelEdit());\n    }\n  };\n};\n\nvar withConnect = connect(mapStateToProps, mapDispatchToProps);\nexport default compose(withConnect, memo)(RemindersCalendar);","map":{"version":3,"sources":["/home/halil/Desktop/react_reminder/src/pages/reminders-calendar/index.js"],"names":["React","memo","compose","connect","useInjectReducer","Calendar","CaledarReminder","Modal","Reminder","reducer","getCurrentDate","getRemindersByDate","getSelectedItem","moveBacward","moveForward","addItem","editItem","saveItem","deleteItem","cancelEdit","selectToday","key","RemindersCalendar","props","selectedItem","onCancelEdit","onSave","onDelete","remindersByDate","calendarProps","reminderModal","renderReminders","dayId","map","reminder","onEdit","id","mapStateToProps","state","date","mapDispatchToProps","dispatch","onPrevious","onNext","onToday","onAddNew","item","withConnect"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport useInjectReducer from '../../hooks/useInjectReducer';\nimport Calendar from '../../components/calendar/calendar';\nimport CaledarReminder from '../../components/calendar/calendar.reminder';\nimport Modal from '../../components/modal';\nimport Reminder from './components/reminder';\nimport {\n  reducer,\n  getCurrentDate,\n  getRemindersByDate,\n  getSelectedItem\n} from './state';\nimport {\n  moveBacward,\n  moveForward,\n  addItem,\n  editItem,\n  saveItem,\n  deleteItem,\n  cancelEdit,\n  selectToday\n} from './state/actions';\n\nconst key = 'remindersCalendar';\n\nconst RemindersCalendar = (props) => {\n  useInjectReducer({ key, reducer });\n\n  const {\n    selectedItem,\n    onCancelEdit,\n    onSave,\n    onDelete,\n    remindersByDate,\n    ...calendarProps\n  } = props;\n\n  let reminderModal = null;\n  if (selectedItem) {\n    reminderModal = (\n      <Modal>\n        <Reminder\n          item={selectedItem}\n          onCancelEdit={onCancelEdit}\n          onSave={onSave}\n          onDelete={onDelete}\n        />\n      </Modal>\n    );\n  }\n\n  function renderReminders(dayId) {\n    if (!remindersByDate[dayId]) {\n      return null;\n    }\n    return remindersByDate[dayId].map(reminder => (\n      <CaledarReminder {...reminder} onEdit={props.onEdit} key={reminder.id} />\n    ));\n  }\n\n  return (\n    <>\n      {reminderModal}\n      <Calendar {...calendarProps} dayRender={renderReminders} />\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  date: getCurrentDate(state),\n  remindersByDate: getRemindersByDate(state),\n  selectedItem: getSelectedItem(state)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onPrevious: () => dispatch(moveBacward()),\n  onNext: () => dispatch(moveForward()),\n  onToday: () => dispatch(selectToday()),\n  onAddNew: () => dispatch(addItem()),\n  onEdit: id => dispatch(editItem(id)),\n  onSave: item => dispatch(saveItem(item)),\n  onDelete: id => dispatch(deleteItem(id)),\n  onCancelEdit: () => dispatch(cancelEdit())\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect, memo)(RemindersCalendar);\n"]},"metadata":{},"sourceType":"module"}